//Practice question version 2.0
//06.04.2024
function practice(key, value) {
    try {
        console.log(`//Key: "${key}"`,"//Value:", value);
        switch (key) {
            case "name":
                if (typeof value === "string") {
                    return `Hello, I am ${value}.`;
                } else {
                    throw "Input not in a 'string' format. e.g. (value = 'Jax') ";
                }
            case "addition":
                if (Array.isArray(value)) {
                    let sum = 0;
                    for (let i = 0; i < value.length; i++) {
                        if (typeof value[i] === "number") {
                            sum += value[i]; 
                        } else {
                            throw "Value elements in the array are not numbers.";
                        }
                    }
                    return sum;
                } else {
                    throw "Value element is not an 'Array' format. e.g. (value = [1,2,3,4,5]) ";
                }
            case "oddEven":
                if (typeof value === "number") {
                    return value % 2 === 0? "Even" : "Odd";
                } else {
                    throw "Value element not a 'number' format. e.g. (value = 50)"
                }
            default:
                throw `Unable to allocate the "${key}" element within the switch statement`;
        }
    } catch (error) {
        console.error("!Caught error!", error);
        return error;
    }
}
let value = "40";
console.log("//Result:", practice("oddEven", value));


//Practice question version 1.0
//04.04.2024
function practice(part, name, num, a,b, user) {
    console.log("Part:", part)
    console.log("Name:", name)
    console.log("num",num)
    console.log("a&b", a,b)
    console.log("User:", user)
    
    if (part === "name") {
      let greeting = `Hello ${name}!`;
      return greeting;
    }
  
    if (part === "num") {
      let oddEven = num % 2 === 0 ? "even" : "odd";  
      return oddEven;
    }
  
    if (part === "a&b") {
      let totalNum = a + b;
      return totalNum;
    }
    if (part === "user"){
        return "password" in user ? user.password : undefined;
    }
  }
  
  const user = { name: 'Lucy', password: 'n0rthc0derzzz' };
  console.log(practice("user", null, null, null, null, user));



//02.04.2024
//Q1 - `Hello ${name}!`

//OP1
function greetFriend(name) {
    let greeting = "Hello" + " " + name + "!"
    return greeting
    }
//OP2
function greetFriend(name) {
    let greeting = `Hello ${name}!`
    return greeting
    }

//Q2 - Addition 
//OP1
function add(a, b) {
    let total = a + b
    return total
    }
//OP2 - straight from return
function add(a, b) {
    return a + b
    }

console.log(add(-1, 2)) 

//Q3 - Even/Odd (num % 2 === 0), condition ? valueIfTrue : valueIfFalse

//OP1
function oddOrEven(num) {
    if (num % 2 === 0){
        return "even"
    } else {
        return "odd"
    }
    }
//OP2 - ternary operator = condition ? valueIfTrue : valueIfFalse
function oddOrEven(num) {
    return num % 2 === 0? "even" : "odd";
    }

//03.04.2024
// figured out a way to build up a function for testing different questions

//Q4
function findFirstOdd(numbers) {
    for (let number of numbers) {
        if (number % 2 === 1) { // Check if number is odd
            return number; // Return the first odd number found
        }
    }
    return undefined; // Return undefined if no odd number is found
}

//Q5 - Retrieving password 
//OP1
//if statement
function retrievePassword(user) {
    if ('password' in user) {
        return user.password; 
    } else {
        return undefined; 
    }
}

//OP2
//ternary operator = condition ? valueIfTrue : valueIfFalse
function retrievePassword(user) {
    return "password" in user ? user.password : undefined;
}

//04.04.2024
//Q6 - Retrieve Key
const result = retrieveKey({ name: 'Sam' }, 'name');
console.log(result); // Output: Sam

//OP1 - Method - If statements
function retrieveKey(object, key) {
    if (key in object) {
        return object[key];
    } else {
        return undefined;
    }
}

//OP2 - Method - Ternary operator
function retrieveKey(person, value) {
    return value in person ? person[value] : undefined;
    }

//07.04.2024
//forgot to put return result; within the for...loop instead put inside the if statement. 
// return result = []; allow the empty array to show if faulty.
// .push to push inside the array at the end allowing result: ['Jinx'] as in an array.

function findEvenLengthStrings(items) {
  // Your code goes here...
  let result = [];
  for (let i = 0; i < items.length; i++) {
    if (typeof items[i] === "string" && items[i].length % 2 === 0) {
      result.push (items[i]);
    }
  }
  return result;
  }

console.log(findEvenLengthStrings(['keepOnlyMe', 'notM', 4]))

//Q9 - MinMax

function findBiggestAndSmallest(numbers) {
    // Your code goes here...
    const maxNum = Math.max(...numbers);
    const minNum = Math.min(...numbers);
    if (Array.isArray(numbers) && numbers.length > 0){
    return {biggest: maxNum, smallest: minNum};
    } else { return {}
    }
}

//Q10 - Prime

//Write a functino tht takes a single positive integar as its argument. If the number is prime it should return true otherwise it should return false. A prime number is a number that is divisible only by itself and 1 - for example 2,3,5,7 
function checkIsPrime(num) {
    if (num === 1) {
        return false;
    } else if (num > 1) {
        for (let i = 2; i < num; i++) {
            if (num % i === 0) {
                return false;
            }
        }
        return true; // Moved outside the loop
    }
    // Removed unnecessary else statement
}

//Q10 - Uppercase name
function greetGuest(name) {
    if (name === "") {
        return "Hello !";
    }
    
    let key = name.split(""); // Split the name into an array of characters
    key[0] = key[0].toUpperCase(); // Capitalize the first letter of the name
    return `Hello ${key.join("")}!`; // Join the array back into a string and return
}


//Q11 - Find string

function findTicketPrices(emailString) {
    // Your code goes here...
    for (let i = 0; i < emailString.length; i++) {
        console.log('character ' + emailString[i] + ' looped.')
        if (typeof emailString[i] !== "numbers") {
            return false
        } else {
            return true
        }
    }
    }

    console.log(findTicketPrices("Hello, I think I can pay 11 pounds, is that alright?"))

    function findTicketPrices(emailString) {
        for (let i = 0; i < emailString.length; i++) {
            console.log('character ' + emailString[i] + ' looped.');
            if (!isNaN(parseInt(emailString[i]))) {
                return true; // If a number is found, return true immediately
            }
        }
        return false; // If no number is found, return false after checking all characters
    }
    
    console.log(findTicketPrices("Hello, I think I can pay 11 pounds, is that alright?"));

    function findTicketPrices(emailString) {
        for (let i = 0; i < emailString.length; i++) {
            const char = emailString[i];
            // Check if the character is a digit (0-9)
            if (char >= '0' && char <= '9') {
                return true; // If a number is found, return true immediately
            }
        }
        return false; // If no number is found, return false after checking all characters
    }
    
    console.log(findTicketPrices("Hello, I think I can pay 11 pounds, is that alright?")); // Output: true



//Q13

function makeGuestList(person) {
  // Your code goes here...
  let result = {};
  let names = person.name.split(" ");

  let firstName = names[0];
  let lastName = names[1];

  result.firstName = firstName;
  result.lastName = lastName;
  result.age = person.age

  return result
  }

  console.log(makeGuestList({ name: "Hannah Fry", age: 46 }));
//Q13
function makeGuestList1(person) {
    let result = {};
    let names = person.name.split(" ");
    let firstName = names[0];
    let lastName = names[1];
    
    result.firstName = firstName;
    result.lastName = lastName;
    result.age = person.age;

    return result;
}
console.log("Approach 1", makeGuestList1({ name: "Paul Erdős", age: 46 }));

function makeGuestList(person) {
    let result = {};
    let names = person.name.split(" ");
    let firstName = names[0];
    let lastName = names[1];
    
    result.firstName = firstName;
    result.lastName = lastName;
    
    for (let key in person) {
        if (key !== 'name') {
            result[key] = person[key];
        }
    }
    
    return result;
}
console.log("Approach 2", makeGuestList({ name: "Paul Erdős", age: 46 }));


//Q14
function trackAttendees(person, ticketCost) {
    // Your code goes here...
    let result = {}
    let paidForTicket = Number(ticketCost)

    for (let key in person) {
        result[key] = person[key]
    }
    
    result.paidForTicket = paidForTicket

    return result 
    }

console.log("My Approach: ", trackAttendees({ firstName: "Ella", lastName: "Vaday", age: 30 }, '13'))

//01.05.2024
//Q15
function isPartyViable(guests) {
    // Your code goes here...
    let totalGuests = 0;
    let totalSales = 0;

    for (let i = 0; i < guests.length; i++) {
        console.log ("keys looped:" + i) 
            totalGuests++;
            console.log ("totalGuests:" + totalGuests)
            totalSales += guests[i].paidForTicket
            console.log ("totalGuests:" + totalSales)
        }
    
    if (totalGuests >= 5 && totalSales >= 100) {
        return true
    } else {
        return false
    }
}


const guests = [
    { name: "diya", paidForTicket: 15 },
    { name: "amul", paidForTicket: 20 },
    { name: "saleh", paidForTicket: 2 },
    { name: "philippa", paidForTicket: 30 },
    { name: "kev", paidForTicket: 26 },
    { name: "sarah", paidForTicket: 11 },
  ]

console.log(isPartyViable(guests));

//Q16 
function orderSupplies(supplies, guests) {
    // Your code goes here...
    let total = 0;
    for (let key in supplies) {
        console.log("Key looped: ", supplies[key])
        total += supplies[key] * guests
    }
    return total;
    }

console.log("Result: " ,orderSupplies({ cake: 2, iceCream: 7 }, 2))


//Q17

function calculateTables(guests, seats) {
    // Your code goes here...
    let result = {}
    let remainingGuests = guests % seats
    let tables = Math.floor(guests / seats)

    result.remainingGuests = remainingGuests
    result.tables = tables

    return result
    }

    console.log(calculateTables(26, 5));
    // should return { tables: 2 , remainingGuests: 0 }


//Q18
function calculateTaxiFare(seconds) {
    let mins = Math.ceil(seconds / 60);
    
    // Calculate cost
    if (mins <= 3) {
        return 500; 
    } else {
        return Math.ceil((mins - 3) * 70 + 500); 
    }
}

console.log(calculateTaxiFare(491));
    //// should return 920
    
//My Approach
function pickWinners(numbers) {
    // Your code goes here...
    let result = [];
    let grouping = {};
    let seats = 0;
    let ticketCost = 0;


    for (let i = 0 ; i < numbers.length; i++) {
        if (i % 2 === 1 && numbers[i] % 2 === 1) {
            seats = i;
            ticketCost = numbers[i];

            grouping.seats = seats;
            grouping.ticketCost = ticketCost;

            return result.grouping
        }
    }
    return result
    }
//Correct Approach
function pickWinners(numbers) {
    // Your code goes here...
    let result = [];

    for (let i = 0 ; i < numbers.length; i++) {
        if (i % 2 === 1 && numbers[i] % 2 === 1) {
            let winner = {};
            winner.seat = i;
            winner.ticketCost = numbers[i];
            result.push(winner);
        }
    }

    return result
}
    console.log(pickWinners([6, 7, 12, 49]))
    // should return [{seat: 1, ticketCost: 7}, {seat: 3, ticketCost: 49}]
