//Practice question version 2.0
//06.04.2024
function practice(key, value) {
    try {
        console.log(`//Key: "${key}"`,"//Value:", value);
        switch (key) {
            case "name":
                if (typeof value === "string") {
                    return `Hello, I am ${value}.`;
                } else {
                    throw "Input not in a 'string' format. e.g. (value = 'Jax') ";
                }
            case "addition":
                if (Array.isArray(value)) {
                    let sum = 0;
                    for (let i = 0; i < value.length; i++) {
                        if (typeof value[i] === "number") {
                            sum += value[i]; 
                        } else {
                            throw "Value elements in the array are not numbers.";
                        }
                    }
                    return sum;
                } else {
                    throw "Value element is not an 'Array' format. e.g. (value = [1,2,3,4,5]) ";
                }
            case "oddEven":
                if (typeof value === "number") {
                    return value % 2 === 0? "Even" : "Odd";
                } else {
                    throw "Value element not a 'number' format. e.g. (value = 50)"
                }
            default:
                throw `Unable to allocate the "${key}" element within the switch statement`;
        }
    } catch (error) {
        console.error("!Caught error!", error);
        return error;
    }
}
let value = "40";
console.log("//Result:", practice("oddEven", value));


//Practice question version 1.0
//04.04.2024
function practice(part, name, num, a,b, user) {
    console.log("Part:", part)
    console.log("Name:", name)
    console.log("num",num)
    console.log("a&b", a,b)
    console.log("User:", user)
    
    if (part === "name") {
      let greeting = `Hello ${name}!`;
      return greeting;
    }
  
    if (part === "num") {
      let oddEven = num % 2 === 0 ? "even" : "odd";  
      return oddEven;
    }
  
    if (part === "a&b") {
      let totalNum = a + b;
      return totalNum;
    }
    if (part === "user"){
        return "password" in user ? user.password : undefined;
    }
  }
  
  const user = { name: 'Lucy', password: 'n0rthc0derzzz' };
  console.log(practice("user", null, null, null, null, user));



//02.04.2024
//Q1 - `Hello ${name}!`

//OP1
function greetFriend(name) {
    let greeting = "Hello" + " " + name + "!"
    return greeting
    }
//OP2
function greetFriend(name) {
    let greeting = `Hello ${name}!`
    return greeting
    }

//Q2 - Addition 
//OP1
function add(a, b) {
    let total = a + b
    return total
    }
//OP2 - straight from return
function add(a, b) {
    return a + b
    }

console.log(add(-1, 2)) 

//Q3 - Even/Odd (num % 2 === 0), condition ? valueIfTrue : valueIfFalse

//OP1
function oddOrEven(num) {
    if (num % 2 === 0){
        return "even"
    } else {
        return "odd"
    }
    }
//OP2 - ternary operator = condition ? valueIfTrue : valueIfFalse
function oddOrEven(num) {
    return num % 2 === 0? "even" : "odd";
    }

//03.04.2024
// figured out a way to build up a function for testing different questions

//Q4
function findFirstOdd(numbers) {
    for (let number of numbers) {
        if (number % 2 === 1) { // Check if number is odd
            return number; // Return the first odd number found
        }
    }
    return undefined; // Return undefined if no odd number is found
}

//Q5 - Retrieving password 
//OP1
//if statement
function retrievePassword(user) {
    if ('password' in user) {
        return user.password; 
    } else {
        return undefined; 
    }
}

//OP2
//ternary operator = condition ? valueIfTrue : valueIfFalse
function retrievePassword(user) {
    return "password" in user ? user.password : undefined;
}

//04.04.2024
//Q6 - Retrieve Key
const result = retrieveKey({ name: 'Sam' }, 'name');
console.log(result); // Output: Sam

//OP1 - Method - If statements
function retrieveKey(object, key) {
    if (key in object) {
        return object[key];
    } else {
        return undefined;
    }
}

//OP2 - Method - Ternary operator
function retrieveKey(person, value) {
    return value in person ? person[value] : undefined;
    }

//07.04.2024
//forgot to put return result; within the for...loop instead put inside the if statement. 
// return result = []; allow the empty array to show if faulty.
// .push to push inside the array at the end allowing result: ['Jinx'] as in an array.

function findEvenLengthStrings(items) {
  // Your code goes here...
  let result = [];
  for (let i = 0; i < items.length; i++) {
    if (typeof items[i] === "string" && items[i].length % 2 === 0) {
      result.push (items[i]);
    }
  }
  return result;
  }

console.log(findEvenLengthStrings(['keepOnlyMe', 'notM', 4]))
